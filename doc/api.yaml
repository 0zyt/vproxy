swagger: "2.0"
info:
  description: "The vproxy http controller api."
  version: "1.0.0"
  title: "vproxy"
host: "127.0.0.1:18776"
basePath: "/api/v1/module"
schemes:
  - "http"
########################
# Begin Generated Code #
########################
tags:
  - name: "tcp-lb"
    description: "tcp loadbalancer"
  - name: "socks5-server"
    description: "socks5 server"
  - name: "dns-server"
    description: "dns server"
  - name: "event-loop-group"
    description: "a group of event loop(s)"
  - name: "event-loop"
    description: "event loop (thread with a selector)"
  - name: "upstream"
    description: "the upstream servers, containing server-group(s)"
  - name: "server-group"
    description: "a group of server(s)"
  - name: "server"
    description: "a remote endpoint"
  - name: "security-group"
    description: "a group of security-group-rule(s)"
  - name: "security-group-rule"
    description: "a rule for accessible or forbidden remote/local address(es)"
  - name: "cert-key"
    description: "a pem format cert(s)/key tuple"

paths:
  /tcp-lb:
    get:
      tags:
        - "tcp-lb"
      summary: "retrieve tcp-lb list"
      operationId: "listTcpLb"
      produces:
        - "application/json"
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/TcpLb'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "tcp-lb"
      summary: "add tcp-lb"
      operationId: "addTcpLb"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/TcpLbCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /tcp-lb/{tl}:
    get:
      tags:
        - "tcp-lb"
      summary: "get tcp-lb"
      operationId: "getTcpLb"
      produces:
        - "application/json"
      parameters:
        - name: "tl"
          in: "path"
          description: "name of the tcp-lb"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/TcpLb'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # {{{[[[
    put:
      tags:
        - "tcp-lb"
      summary: "update tcp-lb"
      operationId: "updateTcpLb"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "tl"
          in: "path"
          description: "name of the tcp-lb"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/TcpLbUpdate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # ]]]}}}
    delete:
      tags:
        - "tcp-lb"
      summary: "remove tcp-lb"
      operationId: "removeTcpLb"
      parameters:
        - name: "tl"
          in: "path"
          description: "name of the tcp-lb"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /tcp-lb/{tl}/detail:
    get:
      tags:
        - "tcp-lb"
      summary: "get detailed info of one tcp-lb"
      operationId: "describeTcpLb"
      parameters:
        - name: "tl"
          in: "path"
          description: "name of the tcp-lb"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/TcpLbDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /socks5-server:
    get:
      tags:
        - "socks5-server"
      summary: "retrieve socks5-server list"
      operationId: "listSocks5Server"
      produces:
        - "application/json"
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/Socks5Server'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "socks5-server"
      summary: "add socks5-server"
      operationId: "addSocks5Server"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/Socks5ServerCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /socks5-server/{socks5}:
    get:
      tags:
        - "socks5-server"
      summary: "get socks5-server"
      operationId: "getSocks5Server"
      produces:
        - "application/json"
      parameters:
        - name: "socks5"
          in: "path"
          description: "name of the socks5-server"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/Socks5Server'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # {{{[[[
    put:
      tags:
        - "socks5-server"
      summary: "update socks5-server"
      operationId: "updateSocks5Server"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "socks5"
          in: "path"
          description: "name of the socks5-server"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/Socks5ServerUpdate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # ]]]}}}
    delete:
      tags:
        - "socks5-server"
      summary: "remove socks5-server"
      operationId: "removeSocks5Server"
      parameters:
        - name: "socks5"
          in: "path"
          description: "name of the socks5-server"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /socks5-server/{socks5}/detail:
    get:
      tags:
        - "socks5-server"
      summary: "get detailed info of one socks5-server"
      operationId: "describeSocks5Server"
      parameters:
        - name: "socks5"
          in: "path"
          description: "name of the socks5-server"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/Socks5ServerDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /dns-server:
    get:
      tags:
        - "dns-server"
      summary: "retrieve dns-server list"
      operationId: "listDnsServer"
      produces:
        - "application/json"
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/DnsServer'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "dns-server"
      summary: "add dns-server"
      operationId: "addDnsServer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/DnsServerCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /dns-server/{dns}:
    get:
      tags:
        - "dns-server"
      summary: "get dns-server"
      operationId: "getDnsServer"
      produces:
        - "application/json"
      parameters:
        - name: "dns"
          in: "path"
          description: "name of the dns-server"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/DnsServer'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # {{{[[[
    put:
      tags:
        - "dns-server"
      summary: "update dns-server"
      operationId: "updateDnsServer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "dns"
          in: "path"
          description: "name of the dns-server"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/DnsServerUpdate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # ]]]}}}
    delete:
      tags:
        - "dns-server"
      summary: "remove dns-server"
      operationId: "removeDnsServer"
      parameters:
        - name: "dns"
          in: "path"
          description: "name of the dns-server"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /dns-server/{dns}/detail:
    get:
      tags:
        - "dns-server"
      summary: "get detailed info of one dns-server"
      operationId: "describeDnsServer"
      parameters:
        - name: "dns"
          in: "path"
          description: "name of the dns-server"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/DnsServerDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /event-loop-group/{elg}/event-loop:
    get:
      tags:
        - "event-loop"
      summary: "retrieve event-loop list from event-loop-group"
      operationId: "listEventLoop"
      produces:
        - "application/json"
      parameters:
        - name: "elg"
          in: "path"
          description: "name of the event-loop-group"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/EventLoop'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "event-loop"
      summary: "add event-loop into event-loop-group"
      operationId: "addEventLoop"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "elg"
          in: "path"
          description: "name of the event-loop-group"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/EventLoopCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /event-loop-group/{elg}/event-loop/{el}:
    get:
      tags:
        - "event-loop"
      summary: "get event-loop in event-loop-group"
      operationId: "getEventLoop"
      produces:
        - "application/json"
      parameters:
        - name: "elg"
          in: "path"
          description: "name of the event-loop-group"
          required: true
          type: string
        - name: "el"
          in: "path"
          description: "name of the event-loop"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/EventLoop'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'

    delete:
      tags:
        - "event-loop"
      summary: "remove event-loop from event-loop-group"
      operationId: "removeEventLoop"
      parameters:
        - name: "elg"
          in: "path"
          description: "name of the event-loop-group"
          required: true
          type: string
        - name: "el"
          in: "path"
          description: "name of the event-loop"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /event-loop-group/{elg}/event-loop/{el}/detail:
    get:
      tags:
        - "event-loop"
      summary: "get detailed info of one event-loop in event-loop-group"
      operationId: "describeEventLoop"
      parameters:
        - name: "elg"
          in: "path"
          description: "name of the event-loop-group"
          required: true
          type: string
        - name: "el"
          in: "path"
          description: "name of the event-loop"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/EventLoopDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /event-loop-group:
    get:
      tags:
        - "event-loop-group"
      summary: "retrieve event-loop-group list"
      operationId: "listEventLoopGroup"
      produces:
        - "application/json"
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/EventLoopGroup'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "event-loop-group"
      summary: "add event-loop-group"
      operationId: "addEventLoopGroup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/EventLoopGroupCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /event-loop-group/{elg}:
    get:
      tags:
        - "event-loop-group"
      summary: "get event-loop-group"
      operationId: "getEventLoopGroup"
      produces:
        - "application/json"
      parameters:
        - name: "elg"
          in: "path"
          description: "name of the event-loop-group"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/EventLoopGroup'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'

    delete:
      tags:
        - "event-loop-group"
      summary: "remove event-loop-group"
      operationId: "removeEventLoopGroup"
      parameters:
        - name: "elg"
          in: "path"
          description: "name of the event-loop-group"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /event-loop-group/{elg}/detail:
    get:
      tags:
        - "event-loop-group"
      summary: "get detailed info of one event-loop-group"
      operationId: "describeEventLoopGroup"
      parameters:
        - name: "elg"
          in: "path"
          description: "name of the event-loop-group"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/EventLoopGroupDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /upstream/{ups}/server-group:
    get:
      tags:
        - "server-group"
      summary: "retrieve server-group list from upstream"
      operationId: "listServerGroupInUpstream"
      produces:
        - "application/json"
      parameters:
        - name: "ups"
          in: "path"
          description: "name of the upstream"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/ServerGroupInUpstream'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "server-group"
      summary: "add server-group into upstream"
      operationId: "addServerGroupInUpstream"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "ups"
          in: "path"
          description: "name of the upstream"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/ServerGroupInUpstreamCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /upstream/{ups}/server-group/{sg}:
    get:
      tags:
        - "server-group"
      summary: "get server-group in upstream"
      operationId: "getServerGroupInUpstream"
      produces:
        - "application/json"
      parameters:
        - name: "ups"
          in: "path"
          description: "name of the upstream"
          required: true
          type: string
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/ServerGroupInUpstream'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # {{{[[[
    put:
      tags:
        - "server-group"
      summary: "update server-group in upstream"
      operationId: "updateServerGroupInUpstream"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "ups"
          in: "path"
          description: "name of the upstream"
          required: true
          type: string
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/ServerGroupInUpstreamUpdate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # ]]]}}}
    delete:
      tags:
        - "server-group"
      summary: "remove server-group from upstream"
      operationId: "removeServerGroupInUpstream"
      parameters:
        - name: "ups"
          in: "path"
          description: "name of the upstream"
          required: true
          type: string
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /upstream/{ups}/server-group/{sg}/detail:
    get:
      tags:
        - "server-group"
      summary: "get detailed info of one server-group in upstream"
      operationId: "describeServerGroupInUpstream"
      parameters:
        - name: "ups"
          in: "path"
          description: "name of the upstream"
          required: true
          type: string
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/ServerGroupInUpstreamDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /upstream:
    get:
      tags:
        - "upstream"
      summary: "retrieve upstream list"
      operationId: "listUpstream"
      produces:
        - "application/json"
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/Upstream'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "upstream"
      summary: "add upstream"
      operationId: "addUpstream"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/UpstreamCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /upstream/{ups}:
    get:
      tags:
        - "upstream"
      summary: "get upstream"
      operationId: "getUpstream"
      produces:
        - "application/json"
      parameters:
        - name: "ups"
          in: "path"
          description: "name of the upstream"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/Upstream'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'

    delete:
      tags:
        - "upstream"
      summary: "remove upstream"
      operationId: "removeUpstream"
      parameters:
        - name: "ups"
          in: "path"
          description: "name of the upstream"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /upstream/{ups}/detail:
    get:
      tags:
        - "upstream"
      summary: "get detailed info of one upstream"
      operationId: "describeUpstream"
      parameters:
        - name: "ups"
          in: "path"
          description: "name of the upstream"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/UpstreamDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /server-group/{sg}/server:
    get:
      tags:
        - "server"
      summary: "retrieve server list from server-group"
      operationId: "listServer"
      produces:
        - "application/json"
      parameters:
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/Server'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "server"
      summary: "add server into server-group"
      operationId: "addServer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/ServerCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /server-group/{sg}/server/{svr}:
    get:
      tags:
        - "server"
      summary: "get server in server-group"
      operationId: "getServer"
      produces:
        - "application/json"
      parameters:
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
        - name: "svr"
          in: "path"
          description: "name of the server"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/Server'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # {{{[[[
    put:
      tags:
        - "server"
      summary: "update server in server-group"
      operationId: "updateServer"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
        - name: "svr"
          in: "path"
          description: "name of the server"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/ServerUpdate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # ]]]}}}
    delete:
      tags:
        - "server"
      summary: "remove server from server-group"
      operationId: "removeServer"
      parameters:
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
        - name: "svr"
          in: "path"
          description: "name of the server"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /server-group/{sg}/server/{svr}/detail:
    get:
      tags:
        - "server"
      summary: "get detailed info of one server in server-group"
      operationId: "describeServer"
      parameters:
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
        - name: "svr"
          in: "path"
          description: "name of the server"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/ServerDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /server-group:
    get:
      tags:
        - "server-group"
      summary: "retrieve server-group list"
      operationId: "listServerGroup"
      produces:
        - "application/json"
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/ServerGroup'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "server-group"
      summary: "add server-group"
      operationId: "addServerGroup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/ServerGroupCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /server-group/{sg}:
    get:
      tags:
        - "server-group"
      summary: "get server-group"
      operationId: "getServerGroup"
      produces:
        - "application/json"
      parameters:
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/ServerGroup'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # {{{[[[
    put:
      tags:
        - "server-group"
      summary: "update server-group"
      operationId: "updateServerGroup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/ServerGroupUpdate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # ]]]}}}
    delete:
      tags:
        - "server-group"
      summary: "remove server-group"
      operationId: "removeServerGroup"
      parameters:
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /server-group/{sg}/detail:
    get:
      tags:
        - "server-group"
      summary: "get detailed info of one server-group"
      operationId: "describeServerGroup"
      parameters:
        - name: "sg"
          in: "path"
          description: "name of the server-group"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/ServerGroupDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /security-group/{secg}/security-group-rule:
    get:
      tags:
        - "security-group-rule"
      summary: "retrieve security-group-rule list from security-group"
      operationId: "listSecurityGroupRule"
      produces:
        - "application/json"
      parameters:
        - name: "secg"
          in: "path"
          description: "name of the security-group"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/SecurityGroupRule'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "security-group-rule"
      summary: "add security-group-rule into security-group"
      operationId: "addSecurityGroupRule"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "secg"
          in: "path"
          description: "name of the security-group"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/SecurityGroupRuleCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /security-group/{secg}/security-group-rule/{secgr}:
    get:
      tags:
        - "security-group-rule"
      summary: "get security-group-rule in security-group"
      operationId: "getSecurityGroupRule"
      produces:
        - "application/json"
      parameters:
        - name: "secg"
          in: "path"
          description: "name of the security-group"
          required: true
          type: string
        - name: "secgr"
          in: "path"
          description: "name of the security-group-rule"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/SecurityGroupRule'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'

    delete:
      tags:
        - "security-group-rule"
      summary: "remove security-group-rule from security-group"
      operationId: "removeSecurityGroupRule"
      parameters:
        - name: "secg"
          in: "path"
          description: "name of the security-group"
          required: true
          type: string
        - name: "secgr"
          in: "path"
          description: "name of the security-group-rule"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /security-group/{secg}/security-group-rule/{secgr}/detail:
    get:
      tags:
        - "security-group-rule"
      summary: "get detailed info of one security-group-rule in security-group"
      operationId: "describeSecurityGroupRule"
      parameters:
        - name: "secg"
          in: "path"
          description: "name of the security-group"
          required: true
          type: string
        - name: "secgr"
          in: "path"
          description: "name of the security-group-rule"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/SecurityGroupRuleDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /security-group:
    get:
      tags:
        - "security-group"
      summary: "retrieve security-group list"
      operationId: "listSecurityGroup"
      produces:
        - "application/json"
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/SecurityGroup'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "security-group"
      summary: "add security-group"
      operationId: "addSecurityGroup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/SecurityGroupCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /security-group/{secg}:
    get:
      tags:
        - "security-group"
      summary: "get security-group"
      operationId: "getSecurityGroup"
      produces:
        - "application/json"
      parameters:
        - name: "secg"
          in: "path"
          description: "name of the security-group"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/SecurityGroup'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # {{{[[[
    put:
      tags:
        - "security-group"
      summary: "update security-group"
      operationId: "updateSecurityGroup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: "secg"
          in: "path"
          description: "name of the security-group"
          required: true
          type: string
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/SecurityGroupUpdate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    # ]]]}}}
    delete:
      tags:
        - "security-group"
      summary: "remove security-group"
      operationId: "removeSecurityGroup"
      parameters:
        - name: "secg"
          in: "path"
          description: "name of the security-group"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /security-group/{secg}/detail:
    get:
      tags:
        - "security-group"
      summary: "get detailed info of one security-group"
      operationId: "describeSecurityGroup"
      parameters:
        - name: "secg"
          in: "path"
          description: "name of the security-group"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/SecurityGroupDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /cert-key:
    get:
      tags:
        - "cert-key"
      summary: "retrieve cert-key list"
      operationId: "listCertKey"
      produces:
        - "application/json"
      responses:
        200:
          description: "ok"
          schema:
            type: array
            items:
              $ref: '#/definitions/CertKey'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
    post:
      tags:
        - "cert-key"
      summary: "add cert-key"
      operationId: "addCertKey"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            $ref: '#/definitions/CertKeyCreate'
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /cert-key/{ck}:
    get:
      tags:
        - "cert-key"
      summary: "get cert-key"
      operationId: "getCertKey"
      produces:
        - "application/json"
      parameters:
        - name: "ck"
          in: "path"
          description: "name of the cert-key"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/CertKey'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'

    delete:
      tags:
        - "cert-key"
      summary: "remove cert-key"
      operationId: "removeCertKey"
      parameters:
        - name: "ck"
          in: "path"
          description: "name of the cert-key"
          required: true
          type: string
      responses:
        204:
          description: "ok"
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'
  /cert-key/{ck}/detail:
    get:
      tags:
        - "cert-key"
      summary: "get detailed info of one cert-key"
      operationId: "describeCertKey"
      parameters:
        - name: "ck"
          in: "path"
          description: "name of the cert-key"
          required: true
          type: string
      responses:
        200:
          description: "ok"
          schema:
            $ref: '#/definitions/CertKeyDetail'
        400:
          description: "invalid input parameters"
          schema:
            $ref: '#/definitions/Error400'
        404:
          description: "resource not found"
          schema:
            $ref: '#/definitions/Error404'
        409:
          description: "conflict"
          schema:
            $ref: '#/definitions/Error409'
        500:
          description: "internal error"
          schema:
            $ref: '#/definitions/Error500'

######################
# End Generated Code #
######################

definitions:
  Error400:
    type: "object"
    properties:
      code:
        type: "integer"
      message:
        type: "string"
  Error404:
    type: "object"
    properties:
      code:
        type: "integer"
      message:
        type: "string"
  Error409:
    type: "object"
    properties:
      code:
        type: "integer"
      message:
        type: "string"
  Error500:
    type: "object"
    properties:
      code:
        type: "integer"
      errId:
        type: "string"
      message:
        type: "string"
  Protocol:
    type: "string"
    enum:
      - tcp
      - http
      - h2
      - http/1.x
      - framed-int32
      - dubbo
  CheckProtocol:
    type: string
    description: "the protocol for health check"
    default: tcp
    enum:
      - tcp
      - none
  SecurityGroupProtocol:
    type: string
    enum:
      - TCP
      - UDP
  ServerGroupMethod:
    type: string
    description: "the loadbalancing method"
    default: wrr
    enum:
      - wrr
      - wlc
      - source
  Rule:
    type: string
    enum:
      - allow
      - deny
  IPType:
    type: string
    description: "binds ipv4 or ipv6"
    default: v4
    enum:
      - v4
      - v6
  TcpLb:
    type: "object"
    properties:
      name:
        type: "string"
      address:
        type: "string"
        description: "binding l4addr"
      backend:
        type: "string"
        description: "upstream reference for backend servers"
      protocol:
        $ref: '#/definitions/Protocol'
      acceptorLoopGroup:
        type: "string"
        description: "event loop group for accepting connections"
      workerLoopGroup:
        type: "string"
        description: "event loop group for handling netflow"
      inBufferSize:
        type: "integer"
        description: "input buffer size"
      outBufferSize:
        type: "integer"
        description: "output buffer size"
      listOfCertKey:
        type: "array"
        items:
          type: "string"
          description: "cert-key reference for enabling TLS"
      securityGroup:
        type: "string"
        description: "security group reference for access control"
  TcpLbCreate:
    type: "object"
    required:
      - "name"
      - "address"
      - "backend"
    properties:
      name:
        type: "string"
      address:
        type: "string"
        description: "binding l4addr"
      backend:
        type: "string"
        description: "upstream reference for backend servers"
      protocol:
        $ref: '#/definitions/Protocol'
      acceptorLoopGroup:
        type: "string"
        description: "event loop group for accepting connections"
      workerLoopGroup:
        type: "string"
        description: "event loop group for handling netflow"
      inBufferSize:
        type: "integer"
        description: "input buffer size"
      outBufferSize:
        type: "integer"
        description: "output buffer size"
      listOfCertKey:
        type: "array"
        items:
          type: "string"
          description: "cert-key reference for enabling TLS"
      securityGroup:
        type: "string"
        description: "security group reference for access control"
  TcpLbUpdate:
    type: "object"
    properties:
      inBufferSize:
        type: "integer"
      outBufferSize:
        type: "integer"
      listOfCertKey:
        type: "array"
        items:
          type: "string"
          description: "cert-key reference for enabling TLS"
      securityGroup:
        type: "string"
        description: "security group reference for access control"
  TcpLbDetail:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
        description: "l4addr"
      backend:
        $ref: '#/definitions/UpstreamDetail'
      protocol:
        $ref: '#/definitions/Protocol'
      acceptorLoopGroup:
        $ref: '#/definitions/EventLoopGroupDetail'
      workerLoopGroup:
        $ref: '#/definitions/EventLoopGroupDetail'
      inBufferSize:
        type: integer
        description: "input buffer size"
      outBufferSize:
        type: integer
        description: "output buffer size"
      listOfCertKey:
        type: array
        items:
          $ref: '#/definitions/CertKeyDetail'
      securityGroup:
        $ref: '#/definitions/SecurityGroupDetail'
  Socks5Server:
    type: object
    properties:
      name:
        type: string
      address:
        type: "string"
        description: "binding l4addr"
      backend:
        type: "string"
        description: "upstream reference for backend servers"
      acceptorLoopGroup:
        type: "string"
        description: "event loop group for accepting connections"
      workerLoopGroup:
        type: "string"
        description: "event loop group for handling netflow"
      inBufferSize:
        type: "integer"
        description: "input buffer size"
      outBufferSize:
        type: "integer"
        description: "output buffer size"
      securityGroup:
        type: "string"
        description: "security group reference for access control"
      allowNonBackend:
        type: boolean
        description: "allow or disallow to proxy to non-backend endpoints"
  Socks5ServerCreate:
    type: object
    required:
      - name
      - address
      - backend
    properties:
      name:
        type: string
      address:
        type: "string"
        description: "binding l4addr"
      backend:
        type: "string"
        description: "upstream reference for backend servers"
      acceptorLoopGroup:
        type: "string"
        description: "event loop group for accepting connections"
      workerLoopGroup:
        type: "string"
        description: "event loop group for handling netflow"
      inBufferSize:
        type: "integer"
        description: "input buffer size"
      outBufferSize:
        type: "integer"
        description: "output buffer size"
      securityGroup:
        type: "string"
        description: "security group reference for access control"
      allowNonBackend:
        type: boolean
        description: "allow or disallow to proxy to non-backend endpoints"
  Socks5ServerUpdate:
    type: object
    properties:
      inBufferSize:
        type: integer
      outBufferSize:
        type: integer
      securityGroup:
        type: string
        description: "security group reference for access control"
      allowNonBackend:
        type: boolean
        description: "allow or disallow to proxy to non-backend endpoints"
  Socks5ServerDetail:
    type: object
    properties:
      name:
        type: string
      address:
        type: "string"
        description: "binding l4addr"
      backend:
        $ref: '#/definitions/UpstreamDetail'
      acceptorLoopGroup:
        $ref: '#/definitions/EventLoopGroupDetail'
      workerLoopGroup:
        $ref: '#/definitions/EventLoopGroupDetail'
      inBufferSize:
        type: "integer"
        description: "input buffer size"
      outBufferSize:
        type: "integer"
        description: "output buffer size"
      securityGroup:
        $ref: '#/definitions/SecurityGroupDetail'
      allowNonBackend:
        type: boolean
        description: "allow or disallow to proxy to non-backend endpoints"
  DnsServer:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
        description: "binding l4addr"
      rrsets:
        type: string
        description: "answer records"
      ttl:
        type: integer
        description: "ttl of answer records"
      eventLoopGroup:
        type: string
        description: "reference to the running event loop group"
      securityGroup:
        type: string
        description: "security group for the dns server to use"
  DnsServerCreate:
    type: object
    required:
      - name
      - address
      - rrsets
    properties:
      name:
        type: string
      address:
        type: string
        description: "binding l4addr"
      rrsets:
        type: string
        description: "answer records"
      ttl:
        type: integer
        description: "ttl of answer records"
      eventLoopGroup:
        type: string
        description: "reference to the running event loop group"
      securityGroup:
        type: string
        description: "security group for the dns server to use"
  DnsServerUpdate:
    type: object
    properties:
      ttl:
        type: integer
        description: "ttl of answer records"
      securityGroup:
        type: string
        description: "security group for the dns server to use"
  DnsServerDetail:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
        description: "binding l4addr"
      rrsets:
        $ref: '#/definitions/UpstreamDetail'
      ttl:
        type: integer
        description: "ttl of answer records"
      eventLoopGroup:
        $ref: '#/definitions/EventLoopGroupDetail'
      securityGroup:
        $ref: '#/definitions/SecurityGroupDetail'
  EventLoopGroup:
    type: object
    properties:
      name:
        type: string
  EventLoopGroupCreate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
  EventLoopGroupDetail:
    type: object
    properties:
      name:
        type: string
      eventLoopList:
        type: array
        items:
          $ref: '#/definitions/EventLoopDetail'
  EventLoop:
    type: object
    properties:
      name:
        type: string
  EventLoopCreate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
  EventLoopDetail:
    type: object
    properties:
      name:
        type: string
  ServerGroupInUpstream:
    type: object
    properties:
      name:
        type: string
      weight:
        type: integer
        description: "weight of the server-group in the upstream"
      annotations:
        type: object
        additionalProperties:
          type: string
  ServerGroupInUpstreamCreate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
      weight:
        type: integer
        description: "weight of the server-group in the upstream"
      annotations:
        type: object
        additionalProperties:
          type: string
  ServerGroupInUpstreamUpdate:
    type: object
    properties:
      weight:
        type: integer
        description: "weight of the server-group in the upstream"
      annotations:
        type: object
        additionalProperties:
          type: string
  ServerGroupInUpstreamDetail:
    type: object
    properties:
      name:
        type: string
      weight:
        type: integer
        description: "weight of the server-group in the upstream"
      annotations:
        type: object
        additionalProperties:
          type: string
      serverGroup:
        $ref: '#/definitions/ServerGroupDetail'
  Upstream:
    type: object
    properties:
      name:
        type: string
  UpstreamCreate:
    type: object
    required:
      - name
    properties:
      name:
        type: string
  UpstreamDetail:
    type: object
    properties:
      name:
        type: string
      serverGroupList:
        type: "array"
        items:
          $ref: '#/definitions/ServerGroupInUpstreamDetail'
  ServerGroup:
    type: object
    properties:
      name:
        type: string
      timeout:
        type: integer
        description: "health check timeout (ms) (timeout before getting expected response)"
      period:
        type: integer
        description: "health check period (ms) (interval between two hc)"
      up:
        type: integer
        description: "consider the server healthy after $up times of successful health checks"
      down:
        type: integer
        description: "consider the server unhealthy after $down times of failed health checks"
      protocol:
        $ref: '#/definitions/CheckProtocol'
      method:
        $ref: '#/definitions/ServerGroupMethod'
      annotations:
        type: object
        additionalProperties:
          type: string
      eventLoopGroup:
        type: string
        description: "the event loop group to run health check on"
  ServerGroupCreate:
    type: object
    required:
      - name
      - timeout
      - period
      - up
      - down
    properties:
      name:
        type: string
      timeout:
        type: integer
        description: "health check timeout (ms) (timeout before getting expected response)"
      period:
        type: integer
        description: "health check period (ms) (interval between two hc)"
      up:
        type: integer
        description: "consider the server healthy after $up times of successful health checks"
      down:
        type: integer
        description: "consider the server unhealthy after $down times of failed health checks"
      protocol:
        $ref: '#/definitions/CheckProtocol'
      method:
        $ref: '#/definitions/ServerGroupMethod'
      annotations:
        type: object
        additionalProperties:
          type: string
      eventLoopGroup:
        type: string
        description: "the event loop group to run health check on"
  ServerGroupUpdate:
    type: object
    properties:
      timeout:
        type: integer
        description: "health check timeout (ms) (timeout before getting expected response)"
      period:
        type: integer
        description: "health check period (ms) (interval between two hc)"
      up:
        type: integer
        description: "consider the server healthy after $up times of successful health checks"
      down:
        type: integer
        description: "consider the server unhealthy after $down times of failed health checks"
      protocol:
        $ref: '#/definitions/CheckProtocol'
      method:
        $ref: '#/definitions/ServerGroupMethod'
      annotations:
        type: object
        additionalProperties:
          type: string
  ServerGroupDetail:
    type: object
    properties:
      name:
        type: string
      timeout:
        type: integer
        description: "health check timeout (ms) (timeout before getting expected response)"
      period:
        type: integer
        description: "health check period (ms) (interval between two hc)"
      up:
        type: integer
        description: "consider the server healthy after $up times of successful health checks"
      down:
        type: integer
        description: "consider the server unhealthy after $down times of failed health checks"
      protocol:
        $ref: '#/definitions/CheckProtocol'
      method:
        $ref: '#/definitions/ServerGroupMethod'
      annotations:
        type: object
        additionalProperties:
          type: string
      eventLoopGroup:
        $ref: '#/definitions/EventLoopGroupDetail'
      serverList:
        type: "array"
        items:
          $ref: '#/definitions/ServerDetail'
  Server:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
        description: "l4addr or hostname:port"
      weight:
        type: integer
        description: "weight of the server in the server group"
      currentIp:
        type: string
        description: "l3addr"
      status:
        type: string
        enum:
          - UP
          - DOWN
      cost:
        type: integer
        description: the milliseconds cost for one successful health check
      downReason:
        type: string
        description: reason for the last failed health check
  ServerCreate:
    type: object
    required:
      - name
      - address
    properties:
      name:
        type: string
      address:
        type: string
        description: "l4addr or hostname:port"
      weight:
        type: integer
        description: "weight of the server in the server group"
  ServerUpdate:
    type: object
    properties:
      weight:
        type: integer
        description: "weight of the server in the server group"
  ServerDetail:
    type: object
    properties:
      name:
        type: string
      address:
        type: string
        description: "l4addr or hostname:port"
      weight:
        type: integer
        description: "weight of the server in the server group"
      currentIp:
        type: string
        description: "l3addr"
      status:
        type: string
        enum:
          - UP
          - DOWN
      cost:
        type: integer
        description: the milliseconds cost for one successful health check
      downReason:
        type: string
        description: reason for the last failed health check
  CertKey:
    type: object
    properties:
      name:
        type: string
      certs:
        type: array
        items:
          type: string
          description: "file path of the cert"
      key:
        type: string
        description: "file path of the key"
  CertKeyCreate:
    type: object
    required:
      - name
      - certs
      - key
    properties:
      name:
        type: string
      certs:
        type: array
        items:
          type: string
          description: "file path of the cert"
      key:
        type: string
        description: "file path of the key"
  CertKeyDetail:
    type: object
    properties:
      name:
        type: string
      certs:
        type: array
        items:
          type: string
          description: "file path of the cert"
      certPemList:
        type: array
        items:
          type: string
          description: "pem content of the cert"
      key:
        type: string
        description: "file path of the key"
      keySHA1:
        type: string
        description: "SHA1 of the pem of the key"
  SecurityGroup:
    type: object
    properties:
      name:
        type: string
      defaultRule:
        $ref: '#/definitions/Rule'
  SecurityGroupCreate:
    type: object
    required:
      - name
      - defaultRule
    properties:
      name:
        type: string
      defaultRule:
        $ref: '#/definitions/Rule'
  SecurityGroupUpdate:
    type: object
    properties:
      defaultRule:
        $ref: '#/definitions/Rule'
  SecurityGroupDetail:
    type: object
    properties:
      name:
        type: string
      defaultRule:
        $ref: '#/definitions/Rule'
      ruleList:
        type: array
        items:
          $ref: '#/definitions/SecurityGroupRuleDetail'
  SecurityGroupRule:
    type: object
    properties:
      name:
        type: string
      clientNetwork:
        type: string
        description: "network cidr"
      protocol:
        $ref: '#/definitions/SecurityGroupProtocol'
      serverPortMin:
        type: integer
        description: "port range min for server (inclusive)"
      serverPortMax:
        type: integer
        description: "port range max for server (inclusive)"
      rule:
        $ref: '#/definitions/Rule'
  SecurityGroupRuleCreate:
    type: object
    required:
      - name
      - clientNetwork
      - protocol
      - serverPortMin
      - serverPortMax
      - rule
    properties:
      name:
        type: string
      clientNetwork:
        type: string
        description: "network cidr"
      protocol:
        $ref: '#/definitions/SecurityGroupProtocol'
      serverPortMin:
        type: integer
        description: "port range min for server (inclusive)"
      serverPortMax:
        type: integer
        description: "port range max for server (inclusive)"
      rule:
        $ref: '#/definitions/Rule'
  SecurityGroupRuleDetail:
    type: object
    properties:
      name:
        type: string
      clientNetwork:
        type: string
        description: "network cidr"
      protocol:
        $ref: '#/definitions/SecurityGroupProtocol'
      serverPortMin:
        type: integer
        description: "port range min for server (inclusive)"
      serverPortMax:
        type: integer
        description: "port range max for server (inclusive)"
      rule:
        $ref: '#/definitions/Rule'




